name: Puplish docker image to GitHub container registery

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_IMAGE: mbabai/highstorm-next

jobs:
  check_mergeability:
    if: github.event.pull_request.head.ref == 'dev'
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if pull request is mergeable
        id: check_mergeability
        run: |
          MERGEABLE_STATE="unknown"
          RETRIES=5
          DELAY=10

          for i in $(seq 1 $RETRIES); do
            PR_MERGEABLE=$(jq -r .pull_request.mergeable "$GITHUB_EVENT_PATH")

            if [ "$PR_MERGEABLE" == "true" ]; then
              echo "Pull request is mergeable."
              MERGEABLE_STATE="mergeable"
              break
            elif [ "$PR_MERGEABLE" == "false" ]; then
              echo "Pull request is not mergeable."
              MERGEABLE_STATE="not_mergeable"
              break
            else
              echo "Mergeability not determined yet. Retry $i/$RETRIES..."
              sleep $DELAY
            fi
          done

          # Fail if the mergeable status is not mergeable
          if [ "$MERGEABLE_STATE" == "not_mergeable" ]; then
            exit 1
          elif [ "$MERGEABLE_STATE" == "unknown" ]; then
            echo "Could not determine mergeability after $RETRIES retries."
            exit 1
          fi

  lint:
    if: github.event.pull_request.head.ref == 'dev'
    runs-on: ubuntu-22.04
    needs: check_mergeability

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  test:
    if: github.event.pull_request.head.ref == 'dev'
    runs-on: ubuntu-22.04
    needs:
      - lint
    steps:
      - name: Ceckout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: install dependencies
        run: npm install

      - name: Run Test
        run: npm run test
  build:
    if: github.event.pull_request.head.ref == 'dev'
    runs-on: ubuntu-22.04
    needs:
      - test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GHCR_TOKEN }}
  push-to-dockerhub:
    if: github.event.pull_request.head.ref == 'dev'
    runs-on: ubuntu-22.04
    needs:
      - build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: mbabai
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          platforms: linux/amd64,linux/arm64/v8
